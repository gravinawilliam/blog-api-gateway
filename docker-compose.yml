version: '3.7'

volumes:
  kong_data: {}

networks:
  kong-net:
    external: true

services:
  kong-migrations:
    image: "kong:2.3.2-alpine"
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_DATABASE: ${POSTGRES_DB}
      KONG_PG_USER: ${POSTGRES_USER}
      KONG_PG_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong-migrations-up:
    image: "kong:2.3.2-alpine"
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
    networks:
      - kong-net
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  kong:
    image: "kong:2.3.2-alpine"
    user: "kong"
    depends_on:
      - db
    environment:
      KONG_ADMIN_ACCESS_LOG: ${KONG_ADMIN_ACCESS_LOG}
      KONG_ADMIN_ERROR_LOG: ${KONG_ADMIN_ERROR_LOG}
      KONG_ADMIN_LISTEN: ${KONG_ADMIN_LISTEN}
      KONG_CASSANDRA_CONTACT_POINTS: ${KONG_CASSANDRA_CONTACT_POINTS}
      KONG_DATABASE: ${KONG_DATABASE}
      KONG_PG_DATABASE: ${KONG_PG_DATABASE}
      KONG_PG_HOST: ${KONG_PG_HOST}
      KONG_PG_USER: ${KONG_PG_USER}
      KONG_PROXY_ACCESS_LOG: ${KONG_PROXY_ACCESS_LOG}
      KONG_PROXY_ERROR_LOG: ${KONG_PROXY_ERROR_LOG}
      KONG_PG_PASSWORD: ${KONG_PG_PASSWORD}
    networks:
      - kong-net
    ports:
      - "8000:8000/tcp"
      - "127.0.0.1:8001:8001/tcp"
      - "8443:8443/tcp"
      - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure

  db:
    image: postgres:9.5
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_DB}"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    deploy:
      restart_policy:
        condition: on-failure
    stdin_open: true
    tty: true
    ports:
      - "5432:5432"
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data

  konga-prepare:
    container_name: konga-prepare
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@db:5432/konga_db"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - db

  konga:
    container_name: konga
    image: pantsel/konga:latest
    restart: always
    networks:
      - kong-net
    environment:
      DB_ADAPTER: ${DB_ADAPTER}
      DB_HOST: ${DB_HOST}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      TOKEN_SECRET: ${TOKEN_SECRET}
      DB_DATABASE: ${DB_DATABASE}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - db
    ports:
      - "1337:1337"

  # blog-user:
  #   build:
  #     context: ../blog-user
  #     dockerfile: Dockerfile
  #     args:
  #       port: 2266
  #   container_name: blog-user
  #   command: npm run start:dev && yarn mig:run
  #   ports:
  #     - "2266:2266"
  #   environment:
  #     DB_DEFAULT_PASSWORD: kong
  #     DB_DEFAULT_USERNAME: kong
  #     DB_DEFAULT_DATABASE: blog-user
  #     DB_DEFAULT_TYPE: postgres
  #     DB_DEFAULT_HOST: db
  #     DB_DEFAULT_PORT: 5432
  #     API_PORT: 2266
  #     NODE_ENV: DEV
  #   networks:
  #     - kong-net
  #   depends_on:
  #     - db

  # blog-article:
  #   build:
  #     context: ../blog-article
  #     dockerfile: Dockerfile
  #     args:
  #       port: 6622
  #   container_name: blog-article
  #   command: npm run start:dev && yarn mig:run
  #   ports:
  #     - "6622:6622"
  #   environment:
  #     DB_DEFAULT_PASSWORD: kong
  #     DB_DEFAULT_USERNAME: kong
  #     DB_DEFAULT_DATABASE: blog-article
  #     DB_DEFAULT_TYPE: postgres
  #     DB_DEFAULT_HOST: db
  #     DB_DEFAULT_PORT: 5432
  #     API_PORT: 6622
  #     NODE_ENV: DEV
  #   networks:
  #     - kong-net
  #   depends_on:
  #     - db